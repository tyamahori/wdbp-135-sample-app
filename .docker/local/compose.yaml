services:

    postgresql:
        image: postgres:15.2-bullseye
        container_name: web-db-sample-postgresql
        ports:
            - 127.0.0.1:5432:5432
        environment:
            POSTGRES_DB: sample
            POSTGRES_USER: sample
            POSTGRES_PASSWORD: sample
            POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
        volumes:
            -   type: volume
                source: postgresql
                target: /var/lib/postgresql/data
        healthcheck:
            test: [
                "CMD",
                "pg_isready",
                "-U",
                "sample",
                "-d",
                "sample"
            ]
            interval: 10s
            timeout: 5s
            retries: 5

    mysql:
        image: mysql:8.0.32
        container_name: web-db-sample-mysql
        ports:
            - 127.0.0.1:3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: sample
            MYSQL_DATABASE: sample
            MYSQL_USER: sample
            MYSQL_PASSWORD: sample
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        volumes:
            -   type: volume
                source: mysql
                target: /var/lib/mysql
        healthcheck:
            test: [
                "CMD",
                "mysqladmin",
                "ping",
                "-h",
                "localhost",
                "-u",
                "sample",
                "-psample"
            ]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7.0.9-bullseye
        container_name: web-db-sample-redis
        ports:
            - 127.0.0.1:6379:6379
        command: redis-server --appendonly yes
        volumes:
            -   type: volume
                source: redis
                target: /data
        healthcheck:
            test: [
                "CMD",
                "redis-cli",
                "ping"
            ]
            interval: 1s
            timeout: 30s
            retries: 30

    mailhog:
        image: mailhog/mailhog:v1.0.1
        platform: linux/x86_64
        ports:
            - 127.0.0.1:8025:8025
        container_name: web-db-sample-mailhog
        healthcheck:
            test: [
                "CMD",
                "ping",
                "-c",
                "3",
                "127.0.0.1"
            ]
            interval: 1s
            timeout: 30s
            retries: 5

    mailpit:
        image: axllent/mailpit:v1.4.0
        ports:
            - 127.0.0.1:8026:8025
        container_name: web-db-sample-mailpit
        healthcheck:
            test: [
                "CMD",
                "ping",
                "-c",
                "3",
                "127.0.0.1"
            ]
            interval: 1s
            timeout: 30s
            retries: 5

    minio:
        image: minio/minio:RELEASE.2023-03-13T19-46-17Z
        ports:
            - 127.0.0.1:9001:9001
            - 127.0.0.1:9000:9000
        container_name: web-db-sample-minio
        command: server /export --console-address ":9001"
        volumes:
            -   type: volume
                source: minio
                target: /export
            -   type: volume
                source: minio-config
                target: /root/.minio
        environment:
            MINIO_ROOT_USER: samplesample
            MINIO_ROOT_PASSWORD: samplesample
        healthcheck:
            test: [
                "CMD",
                "curl",
                "-I",
                "http://localhost:9000/minio/health/live"
            ]
            interval: 1s
            timeout: 30s
            retries: 30

    # minioにてbucketを作成する用のコンテナ `docker compose run --rm  minio-bucket ` と利用される想定
    minio-bucket:
        image: minio/mc:RELEASE.2023-02-28T00-12-59Z
        container_name: web-db-sample-minio-bucket
        entrypoint: >
            sh -c "
            until (mc config host add myminio http://minio:9000 samplesample samplesample) do echo '...waiting...' && sleep 1; done;
            mc mb myminio/sample-bucket;
            mc anonymous set public myminio/sample-bucket;
            "
        depends_on:
            minio:
                condition: service_healthy
        profiles:
            - minio-bucket

    localstack:
        image: localstack/localstack:2.0
        container_name: web-db-sample-localstack
        environment:
            SERVICES: s3
        healthcheck:
            test: [
                "CMD",
                "bash",
                "-c",
                "awslocal s3 ls"
            ]
            interval: 5s
            timeout: 10s
            start_period: 10s
        volumes:
            -   type: bind
                source: ./localstack
                target: /etc/localstack/init/ready.d
            -   type: bind
                source: /var/run/docker.sock
                target: /var/run/docker.sock
            -   type: volume
                source: localstack
                target: /var/lib/localstack

    php-worker:
        image: web-db-sample-php-worker
        build:
            dockerfile: ./php/Dockerfile
            args:
                - USER_ID=${USER_ID}
                - GROUP_ID=${GROUP_ID}
                - USER_NAME=${USER_NAME}
        container_name: web-db-sample-php-worker
        # .env.appをコンテナの環境変数に設定するようにしている。設定を変更する場合は、
        # 設定を変える場合は.env.appの内容を修正し、コンテナを再起動すること
        env_file: ./php/.env.app
        extra_hosts: # Linux向け。rancher desktopだと動かない可能性がある
            - host.docker.internal:host-gateway
        user: ${USER_ID}:${GROUP_ID}
        volumes:
            -   type: bind
                source: ../..
                target: /var/www/html
            -   type: bind
                source: ./php/000-default.conf
                target: /etc/apache2/sites-available/000-default.conf
            -   type: bind
                source: ./php/php.ini
                target: /usr/local/etc/php/php.ini
            -   type: bind
                source: ./php/docker-php-ext-xdebug.ini
                target: /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
        depends_on:
            postgresql:
                condition: service_healthy
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
            mailpit:
                condition: service_healthy
            mailhog:
                condition: service_healthy
            minio:
                condition: service_healthy
            localstack:
                condition: service_healthy

    php-batch:
        image: web-db-sample-php-batch
        build:
            dockerfile: ./php/Dockerfile
            args:
                - USER_ID=${USER_ID}
                - GROUP_ID=${GROUP_ID}
                - USER_NAME=${USER_NAME}
        container_name: web-db-sample-php-batch
        # .env.appをコンテナの環境変数に設定するようにしている。設定を変更する場合は、
        # 設定を帰る場合は.env.appの内容を修正し、コンテナを再起動すること
        env_file: ./php/.env.app
        extra_hosts: # Linux向け。rancher desktopだと動かない可能性がある
            - host.docker.internal:host-gateway
        user: ${USER_ID}:${GROUP_ID}
        volumes:
            -   type: bind
                source: ../..
                target: /var/www/html
            -   type: bind
                source: ./php/000-default.conf
                target: /etc/apache2/sites-available/000-default.conf
            -   type: bind
                source: ./php/php.ini
                target: /usr/local/etc/php/php.ini
            -   type: bind
                source: ./php/docker-php-ext-xdebug.ini
                target: /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
        depends_on:
            postgresql:
                condition: service_healthy
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
            mailpit:
                condition: service_healthy
            mailhog:
                condition: service_healthy
            minio:
                condition: service_healthy
            localstack:
                condition: service_healthy

    php-app:
        image: web-db-sample-php-app
        build:
            dockerfile: ./php/Dockerfile
            args:
                - USER_ID=${USER_ID}
                - GROUP_ID=${GROUP_ID}
                - USER_NAME=${USER_NAME}
        container_name: web-db-sample-php-app
        user: ${USER_ID}:${GROUP_ID}
        volumes:
            -   type: bind
                source: ../..
                target: /var/www/html
            -   type: bind
                source: ./php/000-default.conf
                target: /etc/apache2/sites-available/000-default.conf
            -   type: bind
                source: ./php/php.ini
                target: /usr/local/etc/php/php.ini
            -   type: bind
                source: ./php/docker-php-ext-xdebug.ini
                target: /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
        ports:
            - 127.0.0.1:8000:80
        # .env.appをコンテナの環境変数に設定するようにしている。設定を変更する場合は、
        # 設定を帰る場合は.env.appの内容を修正し、コンテナを再起動すること
        env_file: ./php/.env.app
        extra_hosts: # Linux向け。rancher desktopだと動かない可能性がある
            - host.docker.internal:host-gateway
        depends_on:
            postgresql:
                condition: service_healthy
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
            mailpit:
                condition: service_healthy
            mailhog:
                condition: service_healthy
            minio:
                condition: service_healthy
            localstack:
                condition: service_healthy

volumes:
    postgresql:
        name: web-db-sample-postgresql
    mysql:
        name: web-db-sample-mysql
    redis:
        name: web-db-sample-redis
    minio:
        name: web-db-sample-minio
    minio-config:
        name: web-db-sample-minio-config
    localstack:
        name: web-db-sample-locakstack
